res[[i]] <- moja(mdoc_numbers[i])
}
res <- compact(res)
res
}
test_pull <- possible_mdoc_numbers %>% get_offender_records()
View(parse_offender_record)
library(tidyverse)
test_records <- read_rds("data/raw/raw-records-to-109999.rds")
length(test_records)
test_records <- read_rds("data/raw/raw-records-to-109999.rds")[1:5]
test_records
test_offender_nums <- c(
486641,
238407,
952809
)
mdoc_number <- 100010
req <- httr::GET(
url = "http://mdocweb.state.mi.us/OTIS2/otis2profile.aspx",
query = list(
mdocNumber = mdoc_number
)
)
offender_page <- httr::content(req)
found <- record_is_found(offender_page)
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>% html_nodes(xpath = "div[@id='valSupervisionConditions']")
res
}
res$conditions <- offender_page %>% parse_supervision_conditions()
pacman::p_load(
"tidyverse",
"rvest",
"httr"
)
res$conditions <- offender_page %>% parse_supervision_conditions()
res <- list()
res$conditions <- offender_page %>% parse_supervision_conditions()
res
offender_page %>% html_nodes(xpath = "div[contains(@id, 'valSuper')]")
test_records
mdoc_number <- 100015
offender_page <- httr::content(req)
req <- httr::GET(
url = "http://mdocweb.state.mi.us/OTIS2/otis2profile.aspx",
query = list(
mdocNumber = mdoc_number
)
)
offender_page <- httr::content(req)
res <- list()
res$conditions <- offender_page %>% parse_supervision_conditions()
res
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>% html_nodes(xpath = "span[@id='valSupervisionConditions']")
res
}
offender_page %>% parse_supervision_conditions()
offender_page %>% html_nodes(xpath = "span[@id='valSupervisionConditions']")
offender_page %>% html_nodes(xpath = "span[contains(@id, 'valSupervisionConditions')]")
offender_page %>% html_nodes(xpath = "//span[contains(@id, 'valSupervisionConditions')]")
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>%
html_node(xpath = "//span[@id='valSupervisionConditions']") %>%
html_text()
res
}
offender_page %>% parse_supervision_conditions()
offender_page %>% parse_supervision_conditions() %>% cat()
offender_page %>% parse_supervision_conditions() %>% textConnection() %>% readLines()
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>%
html_node(xpath = "//span[@id='valSupervisionConditions']") %>%
html_text()
res <- res %>% textConnection() %>% readLines()
res <- res[res != ""]
res
}
offender_page %>% parse_supervision_conditions()
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>%
html_node(xpath = "//span[@id='valSupervisionConditions']") %>%
html_text()
res <- res %>% textConnection() %>% readLines()
res <- res[res != ""] %>%
str_split_fixed(" - ", n = 1)
res
}
offender_page %>% parse_supervision_conditions()
res <- res[res != ""]
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>%
html_node(xpath = "//span[@id='valSupervisionConditions']") %>%
html_text()
res <- res %>% textConnection() %>% readLines()
res <- res[res != ""]
res
}
offender_page %>% parse_supervision_conditions() -> supercon
supercon
supercon %>% str_split(" - ")
supercon %>% str_split(" - ") %>% transpose() %>% set_names(c("code", "description"))
supercon %>% str_split(" - ") %>% transpose() %>% set_names(c("code", "description")) %>% as_tible()
supercon %>% str_split(" - ") %>% transpose() %>% set_names(c("code", "description")) %>% as_tibble()
supercon %>% str_split(" - ") %>% transpose() %>% set_names(c("code", "description")) %>% flatten() %>%  as_tibble()
supercon %>% str_split(" - ") %>% transpose() %>% set_names(c("code", "description")) %>% flatten()
supercon %>% str_split(" - ") %>% transpose() %>% set_names(c("code", "description")) %>% map(unlist) %>% set_names(c("code", "description"))
supercon %>% str_split(" - ") %>% transpose() %>% set_names(c("code", "description")) %>% map(unlist) %>% set_names(c("code", "description")) %>% as_tibble()
supercon %>% str_split_fixed(" - ", 2) %>% transpose() %>% set_names(c("code", "description")) %>% map(unlist) %>% set_names(c("code", "description")) %>% as_tibble()
supercon %>% str_split_fixed(" - ", 2)
colnames(res) <- c("supervision_condition_code", "supervision_condition_description")
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>%
html_node(xpath = "//span[@id='valSupervisionConditions']") %>%
html_text()
res <- res %>% textConnection() %>% readLines()
res <- res[res != ""] %>%
str_split_fixed(" - ", 2)
colnames(res) <- c("supervision_condition_code", "supervision_condition_description")
res <- as_tibble(res)
res
}
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>%
html_node(xpath = "//span[@id='valSupervisionConditions']") %>%
html_text()
res <- res %>% textConnection() %>% readLines()
res <- res[res != ""] %>%
str_split_fixed(" - ", 2)
colnames(res) <- c("supervision_condition_code", "supervision_condition_description")
res <- as_tibble(res)
res
}
offender_page %>% parse_supervision_conditions()
test_records <- read_rds("data/raw/raw-records-to-100999.rds")[1:5]
test_records
identify_all_tables <- function(offender_recordset) {
offender_recordset %>%
map(~ .x %>% mutate(offender_number = .x$demos$offender_number))
}
test_records %>% map(identify_all_tables)
identify_all_tables <- function(offender_recordset) {
offender_recordset %>%
map(~ .x %>% mutate(offender_number = offender_recordset$demos$offender_number))
}
test_records %>% map(identify_all_tables)
identify_all_tables <- function(offender_recordset) {
offender_recordset %>%
map(
~ .x %>%
mutate(offender_number = offender_recordset$demos$offender_number) %>%
select(offender_number, everything())
)
}
test_records %>% map(identify_all_tables)
identify_all_tables <- function(offender_recordset) {
offender_recordset %>%
map(
~ .x %>%
mutate(offender_number = offender_recordset$demos$offender_number) %>%
select(offender_number, everything()) %>%
rename(mdoc_id = offender_number)
)
}
identify_all_tables()
test_records %>% map(identify_all_tables)
table_offender_records <- function(raw_offender_records) {
res <- raw_offender_records %>%
map(identify_all_tables) %>%
transpose() %>%
map(bind_rows)
res
}
test_records %>% table_offender_records
clean_mdoc_dates <- function(dat) {
dat %>%
mutate_at(vars(matches("date")), list(as.Date(., format = "%m/%d/%Y")))
}
parse_mdoc_dates <- function(dat) {
dat %>%
mutate_at(vars(matches("date")), list(as.Date(., format = "%m/%d/%Y")))
}
identify_all_tables <- function(offender_recordset) {
offender_recordset %>%
map(
~ .x %>%
mutate(offender_number = offender_recordset$demos$offender_number) %>%
select(offender_number, everything()) %>%
rename(mdoc_id = offender_number) %>%
parse_mdoc_dates()
)
}
parse_mdoc_dates <- function(dat) {
dat %>%
mutate_at(vars(matches("date")), list(as.Date(., format = "%m/%d/%Y")))
}
test_records %>% table_offender_records
table_offender_records <- function(raw_offender_records) {
res <- raw_offender_records %>%
map(identify_all_tables) %>%
transpose() %>%
map(bind_rows) %>%
map(parse_mdoc_dates)
res
}
test_records %>% table_offender_records
parse_mdoc_dates <- function(dat) {
dat %>%
mutate_at(vars(matches("date")), list(~as.Date(., format = "%m/%d/%Y")))
}
table_offender_records <- function(raw_offender_records) {
res <- raw_offender_records %>%
map(identify_all_tables) %>%
transpose() %>%
map(bind_rows) %>%
map(parse_mdoc_dates)
res
}
parse_mdoc_dates <- function(dat) {
dat %>%
mutate_at(vars(matches("date")), list(~as.Date(., format = "%m/%d/%Y")))
}
test_records %>% table_offender_records
cm(1)
parse_offender_height <- function(height_in_inches) {
height_in_inches %>%
str_remove_all("[^\\d\\s]") %>%
str_split(" ")
}
test_records %>% table_offender_records -> test_offender_tables
test_offender_tables
test_offender_tables$demos$height
test_offender_tables$demos$height %>% parse_offender_height()
parse_offender_height <- function(height_in_inches) {
height_in_inches %>%
str_remove_all("[^\\d\\s]") %>%
str_split(" ") %>%
map_dbl(~ cm(.x[1] * 12) + cm(x[2]))
}
test_offender_tables$demos$height %>% parse_offender_height()
parse_offender_height <- function(height_in_inches) {
height_in_inches %>%
str_remove_all("[^\\d\\s]") %>%
str_split(" ") %>%
map(as.numeric) %>%
map_dbl(~ cm(.x[1] * 12) + cm(x[2]))
}
test_offender_tables$demos$height %>% parse_offender_height()
parse_offender_height <- function(height_in_inches) {
height_in_inches %>%
str_remove_all("[^\\d\\s]") %>%
str_split(" ") %>%
map(as.numeric) %>%
map_dbl(~ cm(.x[1] * 12) + cm(.x[2]))
}
test_offender_tables$demos$height %>% parse_offender_height()
parse_offender_weight <- function(weight_in_pounds) {
res <- weight_in_pounds %>%
str_remove_all("[^\\d]") %>%
as.numeric()
res <- res / 0.45359237
res
}
test_offender_tables$demos$weight
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight)
)
res
}
test_offender_tables$demos %>% clean_demos
test_offender_tables
identify_all_tables <- function(offender_recordset) {
offender_recordset %>%
map(
~ .x %>%
mutate(offender_number = offender_recordset$demos$offender_number) %>%
select(offender_number, everything()) %>%
rename(offender_id = offender_number)
)
}
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
name = trimws(full_name)
)
res
}
test_offender_tables$demos %>% clean_demos
parse_offender_height <- function(height_in_inches) {
res <- height_in_inches %>%
str_remove_all("[^\\d\\s]") %>%
str_split(" ") %>%
map(as.numeric) %>%
map_dbl(~ cm(.x[1] * 12) + cm(.x[2]))
res
}
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / (height / 100) ^ 2,
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi
)
res
}
test_tables <- test_records %>% clean_offender_records()
clean_offender_records <- function(raw_offender_records) {
res <- raw_offender_records %>%
table_offender_records() %>%
map(parse_mdoc_dates)
res$demos <- clean_demos(res$demos)
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos
test_tables <- test_records %>%  table_offender_records()
test_tables
clean_offender_records <- function(raw_offender_records) {
res <- raw_offender_records %>%
table_offender_records() %>%
map(parse_mdoc_dates)
res$demos <- clean_demos(res$demos)
res
}
test_tables <- test_records %>%  clean_offender_records()
test_tables
test_tables$demos
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi
)
res
}
test_tables$demos
test_tables <- test_records %>%  clean_offender_records()
test_tables$demos
test_tables <- test_records %>% table_offender_records()
test_tables %>% select(height, weight)
test_tables$demos %>% select(height, weight)
parse_offender_weight <- function(weight_in_pounds) {
res <- weight_in_pounds %>%
str_remove_all("[^\\d]") %>%
as.numeric()
res <- res * 0.45359237
res
}
test_tables <- test_records %>%  clean_offender_records()
test_tables$demos
categorize_bmi <- function(bmi) {
res <- cut(bmi, breaks = c(0, 18.5, 25, 30, 35, 40, Inf), labels = c("Under weight", "Normal weight", "Over weight", "Obese I", "Obese II", "Obese III"))
res
}
categorize_bmi(test_tables$demos$bmi)
categorize_bmi <- function(bmi) {
res <- cut(
bmi,
breaks = c(0, 18.5, 25, 30, 35, 40, Inf),
labels = c(
"Under weight",
"Normal weight",
"Over weight",
"Obese I",
"Obese II",
"Obese III"
))
res
}
categorize_bmi(test_tables$demos$bmi)
test_records <- read_rds("data/raw/raw-records-to-100999.rds")
test_tables <- test_records %>%  table_offender_records()
test_tables <- test_records %>% clean_offender_records()
test_tables
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
bmi_category = categorize_bmi(bmi),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi
)
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos %>% count(bmi_category)
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
bmi_category = categorize_bmi(bmi),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi
)
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos %>% count(bmi_category)
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
bmi_category = categorize_bmi(bmi),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi,
bmi_category
)
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos %>% count(bmi_category)
test_tables$demos %>% filter(is.na(bmi_category))
raw_tables <- test_records %>% table_offender_records()
raw_tables
test_tables$demos %>% filter(is.na(bmi_category)) %>% pull(offender_id) -> x
raw_tables$demos %>% filter(offender_id %in% x)
raw_tables$demos %>% filter(offender_id %in% x) %>% pull(sid)
categorize_bmi <- function(bmi) {
res <- cut(
bmi,
breaks = c(0, 18.5, 25, 30, 35, 40, Inf),
labels = c(
"Under weight",
"Normal weight",
"Over weight",
"Obese I",
"Obese II",
"Obese III"
)) %>%
fct_explicit_na("Missing")
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos
test_tables$demos %>% View()
test_tables$demos %>% select(name, birth_date, race, gender, hair_color)
