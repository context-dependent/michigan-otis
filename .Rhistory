html_text() %>%
trimws()
names(vals) <- vars
res <- tibble(!!!vals)
res
}
sentence_div_to_tibble <- function(offender_page, div_id) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='{div_id}']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='{div_id}']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws()
names(vals) <- vars
res <- tibble(!!!vals)
res
}
offender_page %>% sentence_div_to_tibble("pnlPASentences")
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws()
names(vals) <- vars
res <- tibble(!!!vals)
res
}
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws()
names(vals) <- vars
res <- tibble(!!!vals)
res
}
offender_page %>% sentence_div_to_tibble("PA")
offender_page %>% sentence_div_to_tibble("PI")
sentence_div_to_tibble <- function(offender_page, sentence_type) {
browser()
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws()
names(vals) <- vars
res <- tibble(!!!vals)
res
}
sentence_div_to_tibble(offender_page, "PI")
vars
vals
vals %>% matrix(ncol = length(vals))
vals %>% matrix(ncol = length(vars))
vals %>% matrix(ncol = length(vars), byrow = TRUE)
sentence_div_to_tibble <- function(offender_page, sentence_type) {
browser()
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
names(vals) <- vars
res <- as_tibble(vals)
res
}
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
names(vals) <- vars
res <- as_tibble(vals)
res
}
sentence_div_to_tibble(offender_page, "PI")
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)
colnames(res) <- vars
res
}
sentence_div_to_tibble(offender_page, "PI")
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)
colnames(res) <- vars
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
sentence_div_to_tibble()
sentence_div_to_tibble(offender_page, "RI")
sentence_div_to_tibble(offender_page, "RA")
sentence_div_to_tibble(offender_page, "RI")
debug(sentence_div_to_tibble(offender_page, "RI"))
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)
colnames(res) <- vars
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
debug(sentence_div_to_tibble(offender_page, "RI"))
sentence_div_to_tibble <- function(offender_page, sentence_type) {
browser()
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)
colnames(res) <- vars
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
debug(sentence_div_to_tibble(offender_page, "RI"))
vars
vals
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
blanks <- which(vars == "")
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)[-blanks]
colnames(res) <- vars[-blanks]
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
debug(sentence_div_to_tibble(offender_page, "RI"))
sentence_div_to_tibble <- function(offender_page, sentence_type) {
vars <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]")) %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
blanks <- which(vars == "")
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)[, -blanks]
colnames(res) <- vars[-blanks]
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
debug(sentence_div_to_tibble(offender_page, "RI"))
sentence_div_to_tibble(offender_page, "RI")
sentence_div_to_tibble(offender_page, "PI")
sentence_div_to_tibble(offender_page, "PA")
sentence_div_to_tibble <- function(offender_page, sentence_type) {
var_nodes <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]"))
if(is_empty(var_nodes)) return(NULL)
vars <- var_nodes %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
blanks <- which(vars == "")
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)[, -blanks]
colnames(res) <- vars[-blanks]
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
x <- c("PI", "PA", "RI", "RA") %>% map(sentence_div_to_tibble)
sentence_div_to_tibble <- function(offender_page, sentence_type) {
browser()
var_nodes <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]"))
if(is_empty(var_nodes)) return(NULL)
vars <- var_nodes %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
blanks <- which(vars == "")
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)[, -blanks]
colnames(res) <- vars[-blanks]
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
x <- c("PI", "PA", "RI", "RA") %>% map(sentence_div_to_tibble)
x <- c("PI", "PA", "RI", "RA") %>% map(sentence_div_to_tibble)
x <- c("PI", "PA", "RI", "RA") %>% map(~sentence_div_to_tibble(offender_page, .x))
x
x %>% bind_rows()
parse_offender_setences <- function(offender_page) {
res <- c("PI", "PA", "RI", "RA") %>%
map(
~ sentence_div_to_tibble(offender_page, .x)
)
}
res <- c("PI", "PA", "RI", "RA") %>%
map(
~ sentence_div_to_tibble(offender_page, .x)
) %>%
bind_rows()
sentence_div_to_tibble <- function(offender_page, sentence_type) {
var_nodes <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]"))
if(is_empty(var_nodes)) return(NULL)
vars <- var_nodes %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
blanks <- which(vars == "")
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)[, -blanks]
colnames(res) <- vars[-blanks]
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
parse_offender_setences <- function(offender_page) {
res <- c("PI", "PA", "RI", "RA") %>%
map(
~ sentence_div_to_tibble(offender_page, .x)
) %>%
bind_rows()
}
sentence_div_to_tibble <- function(offender_page, sentence_type) {
var_nodes <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span2')]"))
if(is_empty(var_nodes)) return(NULL)
vars <- var_nodes %>%
html_text() %>%
snakecase::to_snake_case() %>%
unique()
blanks <- which(vars == "")
vals <- offender_page %>%
html_nodes(xpath = glue::glue("//div[@id='pnl{sentence_type}Sentences']//div[contains(@class, 'span3')]")) %>%
html_text() %>%
trimws() %>%
matrix(ncol = length(vars), byrow = TRUE)
res <- as_tibble(vals)[, -blanks]
colnames(res) <- vars[-blanks]
res <- res %>%
mutate(
sentence_type = sentence_type
)
res
}
parse_offender_setences <- function(offender_page) {
res <- c("PI", "PA", "RI", "RA") %>%
map(
~ sentence_div_to_tibble(offender_page, .x)
) %>%
bind_rows()
}
x <- parse_offender_sentences(offender_page)
parse_offender_setences <- function(offender_page) {
res <- c("PI", "PA", "RI", "RA") %>%
map(
~ sentence_div_to_tibble(offender_page, .x)
) %>%
bind_rows()
}
x <- parse_offender_sentences(offender_page)
parse_offender_sentences <- function(offender_page) {
res <- c("PI", "PA", "RI", "RA") %>%
map(
~ sentence_div_to_tibble(offender_page, .x)
) %>%
bind_rows()
}
x <- parse_offender_sentences(offender_page)
x
get_offender_records <- function(mdoc_numbers) {
moja <- function(mdoc_number) {
req <- httr::GET(
url = "http://mdocweb.state.mi.us/OTIS2/otis2profile.aspx",
query = list(
mdocNumber = mdoc_number
)
)
offender_page <- httr::content(req)
found <- record_is_found(offender_page)
if(!found) return(NULL)
res <- list()
res$demos <- offender_page %>% parse_offender_demos()
res$status <- offender_page %>% parse_offender_status()
res$sentences <- offender_page %>% parse_offender_sentences()
res
}
res <- list(length(mdoc_numbers))
for(i in seq_along(mdoc_numbers)) {
res[[i]] <- moja(mdoc_numbers[i])
}
res
}
x <- test_offender_nums %>% get_offender_records()
x
x <- test_fail_nums %>% get_offender_records()
x
x <- test_fail_nums %>% c(test_offender_nums) %>%  get_offender_records()
x
x
x %>% compact()
get_offender_records <- function(mdoc_numbers) {
moja <- function(mdoc_number) {
req <- httr::GET(
url = "http://mdocweb.state.mi.us/OTIS2/otis2profile.aspx",
query = list(
mdocNumber = mdoc_number
)
)
offender_page <- httr::content(req)
found <- record_is_found(offender_page)
if(!found) return(NULL)
res <- list()
res$demos <- offender_page %>% parse_offender_demos()
res$status <- offender_page %>% parse_offender_status()
res$sentences <- offender_page %>% parse_offender_sentences()
res
}
res <- list(length(mdoc_numbers))
for(i in seq_along(mdoc_numbers)) {
res[[i]] <- moja(mdoc_numbers[i])
}
res <- compact(res)
res
}
get_offender_records(100000)
get_offender_records(1000000)
get_offender_records(1000)
get_offender_records(100)
get_offender_records(10)
test_offender_nums
get_offender_records(seq(1E6, 1E7, by = 5000))
x <- seq(1E6, 1E7, by = 5000)
x
x <- seq(1E6, 1E7, by = 20000)
x
x <- seq(1E6, 1E7, by = 50000)
x
m <- get_offender_records(x)
m
test_offender_nums
test_offender_nums[1] + 1:20
test_offender_nums[1] + 1:20 -> test_offender_nums_2
m <- get_offender_records(test_offender_nums_2)
m
test_offender_nums[1] + -20:20 -> test_offender_nums_2
m <- get_offender_records(test_offender_nums_2)
m
m %>% map("demos") %>% bind_rows()
get_offender_records <- function(mdoc_numbers) {
moja <- function(mdoc_number) {
req <- httr::GET(
url = "http://mdocweb.state.mi.us/OTIS2/otis2profile.aspx",
query = list(
mdocNumber = mdoc_number
)
)
offender_page <- httr::content(req)
found <- record_is_found(offender_page)
if(!found) return(NULL)
res <- list()
res$demos <- offender_page %>% parse_offender_demos()
res$status <- offender_page %>% parse_offender_status()
res$sentences <- offender_page %>% parse_offender_sentences()
res$conditions <- offender_page %>% parse_supervision_conditions()
res
}
res <- list(length(mdoc_numbers))
for(i in seq_along(mdoc_numbers)) {
res[[i]] <- moja(mdoc_numbers[i])
}
res <- compact(res)
res
}
scales::comma(1:6)
scales::comma(1E6)
possible_mdoc_numbers <- 1E5:1E6
test_pull <- possible_mdoc_numbers %>% get_offender_records()
parse_supervision_conditions <- function(offender_page) {
res <- offender_page %>% html_nodes(xpath = "div[@id='valSupervisionConditions']")
res
}
test_pull <- possible_mdoc_numbers %>% get_offender_records()
get_offender_records <- function(mdoc_numbers) {
cat("\n")
moja <- function(mdoc_number) {
req <- httr::GET(
url = "http://mdocweb.state.mi.us/OTIS2/otis2profile.aspx",
query = list(
mdocNumber = mdoc_number
)
)
offender_page <- httr::content(req)
found <- record_is_found(offender_page)
if(!found) {
cat("o")
return(NULL)
}
cat("x")
res <- list()
res$demos <- offender_page %>% parse_offender_demos()
res$status <- offender_page %>% parse_offender_status()
res$sentences <- offender_page %>% parse_offender_sentences()
res$conditions <- offender_page %>% parse_supervision_conditions()
res
}
res <- list(length(mdoc_numbers))
for(i in seq_along(mdoc_numbers)) {
res[[i]] <- moja(mdoc_numbers[i])
}
res <- compact(res)
res
}
test_pull <- possible_mdoc_numbers %>% get_offender_records()
View(parse_offender_record)
