mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi
)
res
}
test_tables$demos
test_tables <- test_records %>%  clean_offender_records()
test_tables$demos
test_tables <- test_records %>% table_offender_records()
test_tables %>% select(height, weight)
test_tables$demos %>% select(height, weight)
parse_offender_weight <- function(weight_in_pounds) {
res <- weight_in_pounds %>%
str_remove_all("[^\\d]") %>%
as.numeric()
res <- res * 0.45359237
res
}
test_tables <- test_records %>%  clean_offender_records()
test_tables$demos
categorize_bmi <- function(bmi) {
res <- cut(bmi, breaks = c(0, 18.5, 25, 30, 35, 40, Inf), labels = c("Under weight", "Normal weight", "Over weight", "Obese I", "Obese II", "Obese III"))
res
}
categorize_bmi(test_tables$demos$bmi)
categorize_bmi <- function(bmi) {
res <- cut(
bmi,
breaks = c(0, 18.5, 25, 30, 35, 40, Inf),
labels = c(
"Under weight",
"Normal weight",
"Over weight",
"Obese I",
"Obese II",
"Obese III"
))
res
}
categorize_bmi(test_tables$demos$bmi)
test_records <- read_rds("data/raw/raw-records-to-100999.rds")
test_tables <- test_records %>%  table_offender_records()
test_tables <- test_records %>% clean_offender_records()
test_tables
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
bmi_category = categorize_bmi(bmi),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi
)
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos %>% count(bmi_category)
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
bmi_category = categorize_bmi(bmi),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi
)
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos %>% count(bmi_category)
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
bmi_category = categorize_bmi(bmi),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi,
bmi_category
)
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos %>% count(bmi_category)
test_tables$demos %>% filter(is.na(bmi_category))
raw_tables <- test_records %>% table_offender_records()
raw_tables
test_tables$demos %>% filter(is.na(bmi_category)) %>% pull(offender_id) -> x
raw_tables$demos %>% filter(offender_id %in% x)
raw_tables$demos %>% filter(offender_id %in% x) %>% pull(sid)
categorize_bmi <- function(bmi) {
res <- cut(
bmi,
breaks = c(0, 18.5, 25, 30, 35, 40, Inf),
labels = c(
"Under weight",
"Normal weight",
"Over weight",
"Obese I",
"Obese II",
"Obese III"
)) %>%
fct_explicit_na("Missing")
res
}
test_tables <- test_records %>% clean_offender_records()
test_tables$demos
test_tables$demos %>% View()
test_tables$demos %>% select(name, birth_date, race, gender, hair_color)
remaining_mdoc_numbers <- 3.3E5:1E6
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
source('U:/project-notes/gRowth/michigan-otis/R/get-offender-records.R', echo=TRUE)
r
r
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
remaining_mdoc_numbers <- 3.78E5:1E6
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
x <- NULL
x
timer <- function() {
start_time_global <- NULL
start_time_lap <- NULL
laps <- c()
res <- list(
start = function() {
if(is.null(start_time_global)) start_time_global <<- Sys.time()
},
lap = function() {
time_now <- Sys.time()
if(is.null(start_time_lap)) start_time_lap <<- start_time_global
lap_time <- time_now - start_time_global
laps <<- c(laps, lap_time)
lap_time
},
total = function() {
time_now <- Sys.time()
total_time_elapsed <- time_now - start_time_global
total_time_elapsed
},
reset = function() {
start_time_global <<- NULL
start_time_laps <<- NULL
laps <<- c()
}
)
}
x <- timer()
x$start()
x$lap
x$lap()
x$lap()
x$lap()
x$lap()
x$reset()
rm(x)
timer <- function() {
start_time_global <- NULL
start_time_lap <- NULL
laps <- c()
res <- list(
start = function() {
if(is.null(start_time_global)) start_time_global <<- Sys.time()
},
lap = function() {
time_now <- Sys.time()
if(is.null(start_time_lap)) start_time_lap <<- start_time_global
lap_time <- time_now - start_time_global
laps <<- c(laps, lap_time)
lap_time
},
total = function() {
time_now <- Sys.time()
total_time_elapsed <- time_now - start_time_global
total_time_elapsed
},
reset = function() {
start_time_global <<- NULL
start_time_laps <<- NULL
laps <<- c()
},
get_laps = function() {
laps
}
)
}
x <- timer()
x$start()
x$lap
x$lap()
x$lap()
x$lap()
x$get_laps()
x$get_laps() %>% paste0()
get_offender_records <- function(mdoc_numbers, file_stem, batch_size = 1E4) {
cat("\n")
counter <- 0
request_timer <- timer()
request_timer$start()
moja <- function(mdoc_number) {
req <- httr::GET(
url = "http://mdocweb.state.mi.us/OTIS2/otis2profile.aspx",
query = list(
mdocNumber = mdoc_number
)
)
offender_page <- httr::content(req)
found <- record_is_found(offender_page)
if(!found) {
return(NULL)
}
counter <<- counter + 1
cat_progress_bar(counter)
res <- list()
res$demos      <- offender_page %>% parse_offender_demos()
res$status     <- offender_page %>% parse_offender_status()
res$sentences  <- offender_page %>% parse_offender_sentences()
res$conditions <- offender_page %>% parse_supervision_conditions()
res
}
res <- list(length(mdoc_numbers))
for(i in seq_along(mdoc_numbers)) {
res[[i]] <- moja(mdoc_numbers[i])
if(i == batch_size | i == length(mdoc_numbers)) {
res <- compact(res)
lap <- request_timer$lap()
cat(" ", round(lap))
cat("\r", length(res))
file_path <- file_stem %>% str_c("-to-", mdoc_numbers[i], ".rds")
write_rds(res, file_path)
res <- NULL
remaining_mdoc_numbers <- mdoc_numbers[-1:-i]
if(i == length(mdoc_numbers)) {
cat("\nall done")
return(NULL)
}
get_offender_records(remaining_mdoc_numbers, file_stem = file_stem, batch_size = batch_size)
}
}
res <- compact(res)
res
}
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
remaining_mdoc_numbers <- 5.02E5:1E6
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
clean_offender_records <- function(raw_offender_records) {
res <- raw_offender_records %>%
table_offender_records() %>%
map(parse_mdoc_dates)
res$demos <- clean_demos(res$demos)
res
}
table_offender_records <- function(raw_offender_records) {
res <- raw_offender_records %>%
map(identify_all_tables) %>%
transpose() %>%
map(bind_rows)
res
}
identify_all_tables <- function(offender_recordset) {
offender_recordset %>%
map(
~ .x %>%
mutate(offender_number = offender_recordset$demos$offender_number) %>%
select(offender_number, everything()) %>%
rename(offender_id = offender_number)
)
}
parse_mdoc_dates <- function(dat) {
dat %>%
mutate_at(vars(matches("date")), list(~as.Date(., format = "%m/%d/%Y")))
}
clean_demos <- function(demos_table) {
res <- demos_table %>%
mutate(
height = parse_offender_height(height),
weight = parse_offender_weight(weight),
bmi = weight / ((height / 100) ^ 2),
bmi_category = categorize_bmi(bmi),
name = trimws(full_name) %>% str_to_title()
) %>%
select(
offender_id,
sid,
name,
birth_date,
race,
gender,
hair_color,
eye_color,
height,
weight,
bmi,
bmi_category
)
res
}
parse_offender_height <- function(height_in_inches) {
res <- height_in_inches %>%
str_remove_all("[^\\d\\s]") %>%
str_split(" ") %>%
map(as.numeric) %>%
map_dbl(~ cm(.x[1] * 12) + cm(.x[2]))
res
}
parse_offender_weight <- function(weight_in_pounds) {
res <- weight_in_pounds %>%
str_remove_all("[^\\d]") %>%
as.numeric()
res <- res * 0.45359237
res
}
categorize_bmi <- function(bmi) {
res <- cut(
bmi,
breaks = c(0, 18.5, 25, 30, 35, 40, Inf),
labels = c(
"Under weight",
"Normal weight",
"Over weight",
"Obese I",
"Obese II",
"Obese III"
)) %>%
fct_explicit_na("Missing")
res
}
check_tables <- function() {
paths <- list.files("data/raw", full.names = TRUE)
raw_rds <- paths %>% map(
~ read_rds(.x) %>%
map(
map,
mutate, path = .x
))
res <- raw_rds %>%
flatten() %>%
transpose() %>%
map(bind_rows)
}
test_records <- read_rds("data/raw/raw-records-to-100999.rds")
remaining_mdoc_numbers <- 8.13E5:1E6
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
remaining_mdoc_numbers <- 9.6E5:1E6
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
remaining_mdoc_numbers <- 9.77E5:1E6
remaining_mdoc_numbers %>%
get_offender_records(batch_size = 1000,file_stem = "data/raw/raw-records")
test_records <- read_rds("data/raw/raw-records-to-100999.rds")
test_tables <- test_records %>% clean_offender_records()
test_tables
test_tables$status %>% select(offender_id, mst) %>% separate_rows(mst, sep = "[\\r\\n]+")
test_tables$status %>% select(offender_id, mst) %>% mutate(mst = trimws(mst)) %>% separate_rows(mst, sep = "[\\r\\n]+")
test_tables$status %>% select(offender_id, mst) %>% mutate(mst = trimws(mst)) %>% separate_rows(mst, sep = "[\\r\\n]+") %>% filter(mst != "None") %>% separate(mst, into = c("type", "placement", "description"))
test_tables$status %>% select(offender_id, mst) %>% mutate(mst = trimws(mst)) %>% separate_rows(mst, sep = "[\\r\\n]+") %>% filter(mst != "None") %>% separate(mst, into = c("type", "placement", "description"), sep = "\\s*-\\s*")
test_tables$status
res <- status_table %>%
select(offender_id, alias) %>%
mutate(
alias = trimws(alias)
) %>%
separate_rows(alias, sep = "[\\r\\n]+") %>%
mutate(alias = str_to_title(alias))
clean_aliases <- function(status_table) {
res <- status_table %>%
select(offender_id, alias) %>%
mutate(
alias = trimws(alias)
) %>%
separate_rows(alias, sep = "[\\r\\n]+") %>%
mutate(alias = str_to_title(alias))
res
}
clean_aliases
clean_aliases(test_tables$status)
clean_aliases <- function(status_table) {
res <- status_table %>%
select(offender_id, alias) %>%
mutate(
alias = trimws(alias)
) %>%
separate_rows(alias, sep = "[\\r\\n]+") %>%
mutate(alias = str_to_title(alias) %>% str_replace_all("\\s+", " "))
res
}
clean_aliases(test_tables$status)
clean_aliases <- function(status_table) {
res <- status_table %>%
select(offender_id, alias) %>%
mutate(
alias = trimws(alias)
) %>%
separate_rows(alias, sep = "[\\r\\n]+") %>%
mutate(alias = str_to_title(alias) %>% str_replace_all("\\s+", " ")) %>%
filter(alias != "None")
res
}
clean_aliases(test_tables$status)
test_tables$status
test_tables$sentences
test_tables$sentences %>% count(offense)
test_tables$sentences %>% count(offense) %>% View()
test_tables$sentences %>% count(offense) %>% arrange(-n) %>% View()
test_tables$sentences %>% count(mcl) %>% arrange(-n) %>% View()
test_tables$sentences %>% count(conviction_type) %>% arrange(-n) %>% View()
test_tables$sentences %>% count(discharge_reason) %>% arrange(-n) %>% View()
test_tables$sentences %>% mutate(statute = str_sub(mcl, 1, 3)) %>%  count(statute) %>% arrange(-n) %>% View()
clean_sentences <- function(sentences_table) {
res <- sentences_table %>%
mutate(
sentence_custody = ifelse(str_detect(sentence_type, "^R"), "Probation", "Prison"),
sentence_status  = ifelse(str_detect(sentence_type, "A$"), "Active", "Inactive"),
mcl_act          = str_extract(mcl, "^\\d+")
)
res
}
clean_sentences(test_tables$sentences)
clean_sentences(test_tables$sentences)
clean_sentences <- function(sentences_table) {
res <- sentences_table %>%
mutate(
sentence_id      = 1:n(),
sentence_custody = ifelse(str_detect(sentence_type, "^R"), "Probation", "Prison"),
sentence_status  = ifelse(str_detect(sentence_type, "A$"), "Active", "Inactive"),
mcl_act          = str_extract(mcl, "^\\d+")
)
res
}
clean_sentences(test_tables$sentences)
clean_sentences <- function(sentences_table) {
res <- sentences_table %>%
mutate(
sentence_id      = 10E4 + 1:n(),
sentence_custody = ifelse(str_detect(sentence_type, "^R"), "Probation", "Prison"),
sentence_status  = ifelse(str_detect(sentence_type, "A$"), "Active", "Inactive"),
mcl_act          = str_extract(mcl, "^\\d+")
)
res
}
clean_sentences(test_tables$sentences)
clean_sentences <- function(sentences_table) {
res <- sentences_table %>%
mutate(
sentence_id      = str_c("S-", 10E4 + 1:n()),
sentence_custody = ifelse(str_detect(sentence_type, "^R"), "Probation", "Prison"),
sentence_status  = ifelse(str_detect(sentence_type, "A$"), "Active", "Inactive"),
mcl_act          = str_extract(mcl, "^\\d+")
)
res
}
clean_sentences(test_tables$sentences)
